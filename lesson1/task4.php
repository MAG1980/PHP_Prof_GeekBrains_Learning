<?php
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
echo $a1->foo();    //1
echo $b1->foo();    //1
echo $a1->foo();    //2
echo $b1->foo();    //2

//Такой результат получается благодаря позднему статическому связыванию,
//потому что контекст статического свойства $x определяется не в момент инициализации, а в момент выполнения:
//class B наследует метод foo() у class A, но области видимости статической переменной $x у class A и class B будут
//различны.